{"version":3,"sources":["Home.js","Create.js","Pregame.js","Started.js","Voting.js","Game.js","App.js","serviceWorker.js","index.js"],"names":["axios","require","api","process","Home","useState","games","setGames","useEffect","get","then","r","data","className","to","map","name","key","style","marginTop","Create","props","history","useHistory","id","type","autoComplete","htmlFor","onClick","gameName","document","getElementById","value","admin","setName","method","url","headers","res","push","localStorage","setItem","PreGame","slider","M","Range","init","time","players","player","margin","padding","borderRadius","startGame","min","max","onChange","e","updateTime","target","marginBottom","addPlace","Object","keys","places","i","width","updatePlace","Started","ends","assign","highlights","highlightsSet","collapsible","querySelectorAll","Collapsible","intrvl","clearInterval","x","zeroPad","num","zero","toString","length","Array","join","distance","Math","floor","Date","now","innerHTML","setInterval","place","startVoting","n","tmp","highlight","Voting","votes","vote","voteSet","endGame","castVote","ws","Game","match","params","getItem","nameSet","playersSet","timeSet","adminSet","placesSet","endsSet","stage","stageSet","spy","spySet","placeSet","votesSet","modal","Modal","dismissible","initWs","getInstance","open","WebSocket","onmessage","msg","onMessage","onopen","JSON","stringify","send","onclose","setTimeout","parse","action","blur","t","backgroundColor","for","username","close","App","basename","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7c01574c.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nconst axios = require('axios');\n\nconst api = process.env.REACT_APP_API\n\nfunction Home() {\n  const [games, setGames] = useState([]);\n\n  useEffect(() => {\n    axios.get(api + '/game')\n    .then(r => setGames(r.data));\n  }, []);\n\n\n  return (\n    <div className=\"container\">\n      <h3>スパイ</h3>\n      <div className=\"section\"></div>\n      <div className=\"row center-align\">\n        <Link to='/create' className=\"btn-small grey darken-1\">Create</Link>\n      </div>\n      <div className=\"row\">\n        {games.map(name =>\n          <div className=\"col s12\" key={name}>\n            <div className=\"col s1 m3\"></div>\n            <div className=\"col s5 m3\">\n              <h4>{name}</h4>\n            </div>\n            <div className=\"col s5 m3 right-align\" style={{marginTop: '25px'}}>\n              <Link to={'/'+name} className=\"btn-small grey darken-1\">Join</Link>\n            </div>\n            <div className=\"col s1 m3\"></div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { useHistory } from \"react-router-dom\";\nimport M from 'materialize-css';\nconst axios = require('axios');\n\nconst api = process.env.REACT_APP_API\n\nfunction Create(props) {\n  let history = useHistory();\n\n  const createGame = () => {\n    const gameName = document.getElementById('name').value;\n    const admin = document.getElementById('nick').value;\n    props.setName(admin);\n    axios({\n      method: 'post',\n      url: api + '/game',\n      data: {\n        name: gameName,\n        admin: admin\n      },\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(res =>  history.push('/' + gameName))\n    localStorage.setItem('username', admin)\n  }\n\n\n  return (\n    <div className=\"container\">\n      <div className=\"section\"></div>\n      <div className=\"input-field\">\n        <input id=\"name\" type=\"text\" className=\"validate\" autoComplete=\"off\"/>\n        <label htmlFor=\"name\">Game Name</label>\n      </div>\n      <div className=\"input-field\">\n        <input id=\"nick\" type=\"text\" className=\"validate\" autoComplete=\"off\"/>\n        <label htmlFor=\"nick\">Your Name</label>\n      </div>\n      <div className=\"row\">\n        <div className=\"col s12 center-align\">\n          <a className=\"waves-light btn grey darken-1\" onClick={createGame}>Create</a>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Create;\n","import React, { useState, useEffect } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { useHistory } from \"react-router-dom\";\nimport M from 'materialize-css';\nconst axios = require('axios');\n\nconst api = process.env.REACT_APP_API\n\nfunction PreGame(props) {\n\n  useEffect(() => {\n    const slider = document.getElementById('slider');\n    M.Range.init(slider);\n    slider.value = props.time;\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <div className=\"section\"></div>\n      <div className=\"row\">\n        <h6>Players</h6>\n        {props.players.map(player =>\n          <div className=\"col s6 m4 center-align\" key={player}>\n            <div className=\"teal lighten-1\" style={{margin: '15px 10px', padding: '3px', borderRadius: '2px'}}>\n              {player}\n            </div>\n          </div>\n        )}\n      </div>\n      {props.admin ?\n        <div className=\"row\">\n          <div className=\"col s12 center-align\">\n            <button className=\"btn grey darken-1\" onClick={props.startGame}>Start</button>\n          </div>\n        </div>\n      : null}\n      <div className=\"row\">\n        <h6>Time</h6>\n        <p className=\"range-field\">\n          <input type=\"range\" id=\"slider\" min=\"1\" max=\"20\" value={props.time} onChange={e => props.updateTime(e.target.value)} />\n        </p>\n      </div>\n      <div className=\"row\">\n        <h6>Locations</h6>\n        <div className=\"row\">\n          <div className=\"input-field col s6 offset-s2\">\n            <input id=\"place\" type=\"text\" autoComplete=\"off\" />\n            <label htmlFor=\"place\">New Location</label>\n          </div>\n          <button className=\"btn grey darken-1\" style={{marginBottom: '-50px'}} onClick={props.addPlace}>Add</button>\n        </div>\n        {Object.keys(props.places).map((name, i) =>\n          <div className=\"col s6 m4 center-align\" key={i}>\n            <div style={{margin:'15px 4px'}}>\n            <button\n              className={props.places[name] ? 'btn truncate cstbtn teal lighten-1' : 'btn truncate cstbtn grey darken-1 dsbld'}\n              style={{width: '100%'}}\n              onClick={() => props.updatePlace(name)}>\n              {name}\n            </button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n// {props.places[name] == 1 ? 'pactive truncate' : 'pnotactive truncate'}\nexport default PreGame;\n","import React, { useState, useEffect } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { useHistory } from \"react-router-dom\";\nimport M from 'materialize-css';\nconst axios = require('axios');\n\nconst api = process.env.REACT_APP_API\n\nfunction Started(props) {\n  const ends = props.ends;\n  const places = props.places;\n  const [highlights, highlightsSet] = useState(Object.assign({},places));\n  const [test, testSet] = useState(true);\n\n\n  useEffect(() => {\n    const collapsible = document.querySelectorAll('.collapsible');\n    M.Collapsible.init(collapsible);\n    intrvl();\n    return () => {\n      clearInterval(x);\n    };\n  });\n\n  const zeroPad = (num, places) => {\n    const zero = places - num.toString().length + 1;\n    return Array(+(zero > 0 && zero)).join(\"0\") + num;\n  }\n\n  const intrvl = () => {\n    const distance = ends - Math.floor(Date.now() / 1000)\n    document.getElementById('time').innerHTML = zeroPad(Math.floor(distance / 60), 2) + ':' + zeroPad(Math.floor(distance % 60), 2);\n    if (distance <= 0) {\n      clearInterval(x);\n      document.getElementById('time').innerHTML = '00:00';\n    }\n  }\n\n  const x = setInterval(intrvl, 1000);\n\n  const highlight = n => {\n    let tmp = Object.assign({},highlights);\n    tmp[n] = !tmp[n];\n    highlightsSet(tmp);\n  }\n\n  return (\n    <div className=\"container\">\n      <ul className=\"collapsible\" id=\"collapsible\">\n        <li>\n          <div className=\"collapsible-header background1F\"><i className=\"material-icons\">assignment_ind</i>Your Role</div>\n          <div className=\"collapsible-body background1F\"><span>{props.place}</span></div>\n        </li>\n      </ul>\n      {props.admin ?\n        <div className=\"row\">\n          <div className=\"col s12 center-align\">\n            <button className=\"btn grey darken-1\" onClick={props.startVoting}>Start Voting</button>\n          </div>\n        </div>\n      : null}\n      <div className=\"row center-align\">\n        <h5 id=\"time\"></h5>\n      </div>\n      <div className=\"row\">\n        {Object.keys(places).map((name, i) => {\n          if(places[name]){\n            return (\n              <div className=\"col s6 m4 center-align\" key={i}>\n                <div style={{margin:'15px 4px'}}>\n                <button\n                  className={highlights[name] ? 'btn truncate cstbtn teal lighten-1' : 'btn truncate cstbtn grey darken-1 dsbld'}\n                  style={{width: '100%'}}\n                  onClick={() => highlight(name)}>\n                  {name}\n                </button>\n                </div>\n              </div>\n            )\n          }\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default Started;\n","import React, { useState, useEffect } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { useHistory } from \"react-router-dom\";\nimport M from 'materialize-css';\nconst axios = require('axios');\n\nconst api = process.env.REACT_APP_API\n\nfunction Voting(props) {\n  const votes = props.votes;\n  const [vote, voteSet] = useState('');\n\n  const castVote = n => {\n    if(n !== vote){\n      props.castVote(n);\n      voteSet(n);\n    }\n  }\n\n  return (\n    <div className=\"\">\n      <div className=\"section\"></div>\n      {props.admin ?\n        <div className=\"row\">\n          <div className=\"col s12 center-align\">\n            <button className=\"btn grey darken-1\" onClick={props.endGame}>End Game</button>\n          </div>\n        </div>\n      : null}\n      {Object.keys(votes).map((name, i) =>\n        <div className=\"row\" key={i}>\n          <div className=\"col m3 hide-on-small-only\"></div>\n          <div className=\"col s8 m4\">\n            <h4 className=\"truncate\">{name}</h4>\n          </div>\n\n          <div className=\"col s1 m1\">\n            <h4>{votes[name].length}</h4>\n          </div>\n\n          <div className=\"col s3 m1 right-align\" style={{marginTop: '25px'}}>\n            <button className=\"btn-small grey darken-1\" onClick={() => castVote(name)}>Vote</button>\n          </div>\n          <div className=\"col m3 hide-on-small-only\"></div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Voting;\n","import React, { useState, useEffect } from 'react';\nimport { Link, BrowserRouter } from 'react-router-dom';\nimport useStateWithCallback from 'use-state-with-callback';\nimport M from 'materialize-css';\nimport PreGame from './Pregame';\nimport Started from './Started';\nimport Voting from './Voting';\nconst axios = require('axios');\n\nconst api = process.env.REACT_APP_API\nconst wsApi = process.env.REACT_APP_WS_API\nlet ws = null;\n\nfunction Game(props) {\n  const gameName = props.match.params.id;\n  const [name, nameSet] = useState(localStorage.getItem('username') || '');\n  const [players, playersSet] = useState([]);\n  const [time, timeSet] = useState(0);\n  const [admin, adminSet] = useState('');\n  const [places, placesSet] = useState([]);\n  const [ends, endsSet] = useState(0);\n  const [stage, stageSet] = useState('');\n  const [spy, spySet] = useState('');\n  const [place, placeSet] = useState('');\n  const [votes, votesSet] = useState({});\n\n  useEffect(() => {\n    // initiate stuff\n    const modal = document.getElementById('modal');\n    M.Modal.init(modal, {dismissible: false});\n\n    if(name.length > 0){\n      initWs();\n    }else {\n      M.Modal.getInstance(document.getElementById('modal')).open();\n    }\n  }, []);\n\n  const setName = () => {\n    const username = document.getElementById('name').value;\n    if(username.length > 0){\n      localStorage.setItem('username', username);\n      M.Modal.getInstance(document.getElementById('modal')).close();\n      nameSet(username);\n      initWs();\n    }\n  }\n\n  const initWs = () => {\n    ws = new WebSocket(\"wss://rybieudko.pl/spy/ws\");\n    ws.onmessage = msg => onMessage(msg);\n    ws.onopen = () => {\n      let msg = JSON.stringify({'action': 'init', 'data':{'gameName': gameName, 'userName': localStorage.getItem('username')}})\n      ws.send(msg);\n    };\n    ws.onclose = () => {\n      setTimeout(initWs(), 1000);\n    }\n  }\n\n  const onMessage = msg => {\n    msg = JSON.parse(msg.data)\n    if(msg.action == 'init'){\n      const data = msg.data;\n      playersSet(data.players);\n      timeSet(data.time);\n      adminSet(data.admin);\n      placesSet(data.places);\n      stageSet(data.stage);\n      endsSet(data.ends);\n      spySet(data.spy);\n      placeSet(data.place);\n      votesSet(data.votes);\n    } else if(msg.action == 'update_players'){\n      playersSet(msg.data.players)\n    } else if(msg.action == 'start'){\n      const data = msg.data;\n      endsSet(data.ends);\n      spySet(data.spy);\n      placeSet(data.place);\n      stageSet(data.stage);\n      votesSet(data.votes);\n    } else if(msg.action == 'update_place'){\n      placesSet(msg.data.places)\n    } else if(msg.action == 'vote'){\n      votesSet(msg.data)\n    } else if(msg.action == 'start_voting'){\n      stageSet('voting')\n    } else if(msg.action == 'end_game'){\n      const data = msg.data;\n      stageSet(data.stage);\n      votesSet(data.votes);\n      placeSet(data.place);\n      spySet(data.spy);\n      votesSet(data.votes);\n    } else if(msg.action == 'update_time'){\n      timeSet(msg.data.time)\n    }\n  }\n\n  const startGame = () => {\n    let msg = JSON.stringify({'action': 'start', 'data': {'game': props.match.params.id}})\n    ws.send(msg)\n  }\n\n  const updatePlace = n => {\n    let msg = JSON.stringify({'action': 'update_place', 'data': {'place': n, 'game': gameName}})\n    ws.send(msg)\n  }\n\n  const addPlace = () => {\n    const place = document.getElementById('place');\n    if (place.value.length > 0){\n      let msg = JSON.stringify({'action': 'add_place', 'data': {'place': place.value, 'game': gameName}})\n      ws.send(msg)\n      place.value = '';\n      place.blur();\n    }\n  }\n\n  const startVoting = () => {\n    let msg = JSON.stringify({'action': 'start_voting', 'data': {'game': gameName}})\n    ws.send(msg)\n  }\n\n  const castVote = n => {\n    let msg = JSON.stringify({\n      'action': 'vote',\n      'data': {'game': gameName, 'user': name, 'vote': n}\n    })\n    ws.send(msg)\n  }\n\n  const endGame = () => {\n    let msg = JSON.stringify({'action': 'end_game', 'data': {'game': gameName}})\n    ws.send(msg)\n  }\n\n  const updateTime = t => {\n    let msg = JSON.stringify({'action': 'update_time', 'data': {'game': gameName, 'time': t}})\n    ws.send(msg)\n  }\n\n\n  return (\n    <div>\n      {stage == 'pregame' ?\n        <PreGame\n          players={players}\n          admin={admin == name}\n          places={places}\n          startGame={startGame}\n          addPlace={addPlace}\n          updatePlace={updatePlace}\n          time={time}\n          updateTime={updateTime}\n        />\n        : stage == 'started' ?\n        <Started\n          ends={ends}\n          admin={admin == name}\n          places={places}\n          place={spy == name ? 'spy' : place}\n          startVoting={startVoting}\n        />\n        : stage == 'voting' ?\n        <Voting\n          votes={votes}\n          admin={admin == name}\n          castVote={castVote}\n          endGame={endGame}\n        />\n        : null\n      }\n      {name.length > 0 ? null :\n      <div id=\"modal\" className=\"modal\" style={{backgroundColor: '#1F1F1F'}}>\n        <div className=\"modal-content\">\n          <div className=\"section\"></div>\n          <div className=\"input-field\">\n            <input id=\"name\" type=\"text\" className=\"validate\" autoComplete=\"off\" />\n            <label for=\"name\">Your Name</label>\n          </div>\n          <div className=\"row\">\n            <div className=\"col s12 center-align\">\n              <a className=\"waves-light btn grey darken-1\" onClick={setName}>Set name</a>\n            </div>\n          </div>\n        </div>\n      </div>\n      }\n    </div>\n  );\n}\n\nexport default Game;\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport M from 'materialize-css';\nimport Home from './Home.js';\nimport Create from './Create.js';\nimport Game from './Game.js';\nconst axios = require('axios');\n\nconst api = process.env.REACT_APP_API\n\nfunction App() {\n  const [games, setGames] = useState([]);\n  const [name, setName] = useState('');\n\n  useEffect(() => {\n    axios.get(api + '/game')\n    .then(r => setGames(r.data));\n  }, []);\n\n\n  const createGame = () => {\n    axios.post(api + '/game?name=abc')\n    .then(res => console.log(res))\n  }\n\n  return (\n    <Router basename=\"/spy\">\n      <div>\n        <Switch>\n          <Route path='/create'>\n            <Create setName={name => setName(name)}/>\n          </Route>\n          <Route exact path='/:id' component={Game} />\n          <Route exact path='/'>\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/sw.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}